name: deploy

on:
  push:
    branches:
      - develop
  
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - uat  
          - production

jobs:
  determine-environment:
    name: Determine Environment
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.env.outputs.environment }}
    
    steps:
      - name: Determine Environment
        id: env
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            ENV="${{ github.event.inputs.environment }}"
          else
            case "${{ github.ref_name }}" in
              "develop") ENV="dev" ;;
              "uat")     ENV="uat" ;;
              "production")    ENV="production" ;;
              *)         ENV="dev" ;;  # Default
            esac
          fi
          
          echo "environment=$ENV" >> $GITHUB_OUTPUT
          echo "Target Environment: $ENV"

  deploy:
    name: Deploy to ${{ needs.determine-environment.outputs.environment }}
    runs-on: ubuntu-latest
    needs: determine-environment
    environment: ${{ needs.determine-environment.outputs.environment }}
    
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Salesforce CLI
        run: |
          npm install -g @salesforce/cli
          sf version

      - name: Write Key File
        run: echo "${{ secrets.SF_JWT_KEY }}" > server.key

      - name: Authenticate with JWT
        run: |
          sf org login jwt \
            --client-id ${{ secrets.SF_CLIENT_ID }} \
            --jwt-key-file ./server.key \
            --username ${{ secrets.SF_USERNAME }} \
            --alias ${{ secrets.SF_ORG }} \
            --instance-url ${{ secrets.SF_INSTANCE_URL }}

      - name: Deploy to ${{ needs.determine-environment.outputs.environment }}
        run: |
          ENV="${{ needs.determine-environment.outputs.environment }}"
          echo "Deploying to $ENV environment..."
          sf project deploy start --manifest force-app/manifest/package.xml --target-org ${{ secrets.SF_ORG }} --ignore-conflicts
